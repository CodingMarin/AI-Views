{"version":3,"file":"bundle.js","sources":["webpack:///./script.js"],"sourcesContent":["const chatbotContainer = document.querySelector('.chatbot-container');\nconst chatbotToggle = document.querySelector('.chatbot-toggle-btn')\nconst chatbotToggleBtn = document.querySelector('.chatbot-toggle-icon');\nconst chatbotBody = document.querySelector('.chatbot-body');\nconst chatbotFooter = document.querySelector('.chatbot-footer');\nconst chatbotCloseBtn = document.querySelector('.chatbot-close-btn img');\nconst requestedInfo = document.querySelector('.info-request');\nconst firstInput = document.querySelector('.name');\nconst secondInput = document.querySelector('.surname');\nconst continueBtn = document.querySelector('.continue');\nconst startBtn = document.querySelector('.start');\nconst chatRobot = document.querySelector('.chat-robot');\nconst infoRequest = document.querySelector('.info-request');\n\nlet userName = \"\";\nlet userLocation = \"\";\nlet userWebsite = \"\";\n\nfunction toggleChat() {\n    chatbotContainer.classList.toggle('show');\n    chatbotToggleBtn.classList.toggle('resize');\n}\n\nconst handleContinue = () => {\n    if(firstInput.reportValidity()) {\n        userName = firstInput.value;\n        requestedInfo.textContent = \"Por favor, coloque su contactos\";\n        const phoneCont = document.createElement('div');\n        phoneCont.classList.add('phone-cont');\n        phoneCont.innerHTML = `\n            <div class=\"selector-cont\">\n                <div class=\"country-code-selector\"></div>\n            </div>\n            <input type=\"tel\" class=\"phone contact\" placeholder=\"Celular...\" required />\n            <div class=\"dropdown\" id=\"country-code-dropdown\">\n                <div class=\"dropdown-item\" data-country-code=\"+57\">\n                    <img src=\"./Images/co.png\" alt=\"Colombia flag\" />\n                    Colombia\n                </div>\n                <div class=\"dropdown-item\" data-country-code=\"+1\">\n                    <img src=\"./Images/us.png\" alt=\"USA flag\" />\n                    USA\n                </div>\n                <div class=\"dropdown-item\" data-country-code=\"+34\">\n                    <img src=\"./Images/es.png\" alt=\"Spain flag\" />\n                    Spain\n                </div>\n                <div class=\"dropdown-item\" data-country-code=\"+351\">\n                    <img src=\"./Images/pt.png\" alt=\"Portugal flag\" />\n                    Portugal\n                </div>\n                <div class=\"dropdown-item\" data-country-code=\"+91\">\n                    <img src=\"./Images/in.png\" alt=\"India flag\" />\n                    India\n                </div>\n                <div class=\"dropdown-item\" data-country-code=\"+61\">\n                    <img src=\"./Images/jp.png\" alt=\"Japang\" />\n                    Japan\n                </div>\n            </div>\n        `\n        chatbotBody.insertBefore(phoneCont, firstInput);\n        firstInput.placeholder = \"Correo electrónico...\";\n        firstInput.type = \"email\";\n        firstInput.value = \"\";\n        secondInput.placeholder = \"Página web (Opcional)...\";\n        secondInput.value = \"\";\n        continueBtn.classList.add('hide');\n        startBtn.classList.add('block');\n    }\n    document.querySelector('.country-code-selector')?.addEventListener('click', toggleDropdown);\n    const items = document.querySelectorAll('.dropdown-item');\n    items.forEach((item) => {\n        item.addEventListener('click', (event) => {\n            const code = event.target.getAttribute('data-country-code')\n            selectCountryCode(code, event)\n        })\n    });\n}\n\nconst handleStart = () => {\n    const phoneInput = document.querySelector('.phone');\n    if(phoneInput.reportValidity() && firstInput.reportValidity()) {\n        requestedInfo.innerHTML = `\n            Empecemos a ayudarte\n            <span>Puede seleccionar una opción o\n            escribir una pregunta abajo.</span>\n        `;\n        requestedInfo.classList.add('info-resize');\n        startBtn.classList.add('hide');\n        chatbotBody.innerHTML = `\n            <div class=\"suggestions\">\n                <span>Precios de sus agentes</span>\n                <span>Formas de contacto</span>\n                <span>¿En qué canales funciona?</span>\n                <span>Quiero probar sus agentes</span>\n            </div>\n        `;\n        chatbotFooter.classList.add('show');   \n    }\n    userWebsite = secondInput.value;\n    document.querySelectorAll('.suggestions span').forEach((span) => {\n        span.addEventListener('click', (event) => {\n            sendMessage(event.target.textContent);\n        })\n    })\n}\n\nfunction toggleDropdown() {\n    const dropdown = document.getElementById('country-code-dropdown');\n    dropdown.classList.toggle('block');\n}\n\nfunction selectCountryCode(code, event) {\n    userLocation = event.target.textContent; \n    document.getElementById('country-code-dropdown').classList.remove('block');\n    const phoneInput = document.querySelector('.phone');\n    phoneInput.value = code;\n}\n\nasync function sendMessage(inputValue) {\n    const userInput = document.getElementById('userInput');\n    const messageToSend = inputValue || userInput.value.trim();\n    if (messageToSend !== \"\") {\n        const suggestions = document.querySelector('.suggestions');\n        chatRobot.classList.add('hide');\n        infoRequest.classList.add('hide');\n        suggestions.classList.add('hide');\n        const userMessageCont = document.createElement('div');\n        userMessageCont.classList.add('user-message-cont');\n        const userMessage = document.createElement('div');\n        userMessage.classList.add('user-message');\n        userMessage.textContent = messageToSend;\n        userMessageCont.appendChild(userMessage);\n        const userprofile = document.createElement('img');\n        userprofile.src = './Images/Frame.png';\n        userprofile.alt = 'user image'; userMessage.classList.add('message', 'user-message');\n        userMessageCont.appendChild(userprofile);\n        chatbotBody.appendChild(userMessageCont);\n\n        try {\n            const botResponse = await generateContent(messageToSend, userName, userLocation, userWebsite);\n            if(botResponse) {\n                setTimeout(() => {\n                    const botMessageCont = document.createElement('div');\n                    botMessageCont.classList.add('bot-message-cont');\n                    const botImage = document.createElement('img');\n                    botImage.src = './Images/chat.png';\n                    botImage.alt = 'chatbot image';\n                    botMessageCont.appendChild(botImage);\n                    const botMessage = document.createElement('div');\n                    botMessage.classList.add('bot-message');\n                    botMessage.textContent = botResponse;\n                    botMessageCont.appendChild(botMessage);\n                    chatbotBody.appendChild(botMessageCont);\n                    chatbotBody.scrollTop = chatbotBody.scrollHeight;\n                }, 1000);\n            }\n        }\n        catch (error) {\n            console.log('Error sending message:', error);\n        }\n        userInput.value = \"\";    \n    }\n}\n\nasync function generateContent(userInput, userName, userLocation, userWebsite='') {\n    const apiKey = process.env.GEMINI_API_KEY;\n    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${apiKey}`;\n\n    // Define the context for the landing page\n    let pageContext = `\n        Context: This is a landing page named AI VIews that promotes intelligent agents trained to solve sales challenges. \n        The main feature of this page is offering solutions and services related to improving sales through the use of smart agents. \n        The page also includes a call to action for users to hire an agent.\n\n        User Information:\n        Name: ${userName}\n        Location: ${userLocation}\n    `;\n\n    if (userWebsite) {\n        pageContext += `\\nWebsite: ${userWebsite}`;\n    }\n\n    // Combine page context with user input\n    const prompt = `${pageContext}\\nUser Question: ${userInput}`;\n\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                contents: [\n                    {\n                        parts: [\n                            {\n                                text: prompt\n                            }\n                        ]\n                    }\n                ]\n            })\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        return data.candidates[0].content.parts[0].text;\n    } catch (error) {\n        console.error('Error generating content:', error);\n    }\n}\n\nwindow.addEventListener('scroll', () => {\n    const header = document.querySelector('.fixed');\n    window.scrollY > 0 \n        ? header.classList.add('header-scrolled') \n        : header.classList.remove('header-scrolled');\n});\n\nchatbotToggle.addEventListener('click', toggleChat);\ncontinueBtn.addEventListener('click', handleContinue);\nstartBtn.addEventListener('click', handleStart);\n\ndocument.querySelector('.send-btn').addEventListener('click', () => {\n    sendMessage();\n});\n\ndocument.querySelector('.close-btn').addEventListener('click', toggleChat);\n\ndocument.querySelector('.chatbot-footer input').addEventListener('keydown', (event) => {\n   if(event.key === 'Enter') {\n    sendMessage();\n   }\n});\n\n\n\n\n\n"],"names":["chatbotContainer","document","chatbotToggle","chatbotToggleBtn","chatbotBody","chatbotFooter","requestedInfo","firstInput","secondInput","continueBtn","startBtn","chatRobot","infoRequest","userName","userLocation","userWebsite","toggleChat","toggleDropdown","dropdown","sendMessage","inputValue","userInput","messageToSend","suggestions","userMessageCont","userMessage","userprofile","botResponse","generateContent","setTimeout","botMessageCont","botImage","botMessage","error","console","url","pageContext","prompt","response","fetch","JSON","Error","data","window","header","phoneCont","items","item","event","selectCountryCode","code","phoneInput","span"],"mappings":"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"}